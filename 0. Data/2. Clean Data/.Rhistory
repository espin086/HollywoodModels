#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "a24","arcent", "focus", "lionsgate", "paramount", "sony","universal", "warnerbros", "weinsteincompany", "screengems", "ifc"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x, label = TRUE)
}
extract.dates(release.df$Release.Date)
paste <- function(x,y){
paste0(x,"$", y)
}
paste(release.df,Release.Date)
paste("release.df","Release.Date")
extract.dates <- function(df, var){
year(paste0(x,"$", y))
month(paste0(x,"$", y))
week(paste0(x,"$", y))
wday(paste0(x,"$", y), label = TRUE)
}
extract.dates("release.df", "Release.Date")
extract.dates <- function(df, var){
year(paste0(df ,"$", var))
month(paste0(df ,"$", var))
week(paste0(df ,"$", var))
wday(paste0(df,"$", var), label = TRUE)
}
extract.dates("release.df", "Release.Date")
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x), label = TRUE)
}
extract.dates("release.df$Release.Date")
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x), label = TRUE)
}
extract.dates("release.df$Release.Date")
library(lubridate)
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x), label = TRUE)
}
extract.dates("release.df$Release.Date")
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x, label = TRUE)
}
extract.dates("release.df$Release.Date")
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x, label = TRUE)
}
extract.dates("release.df$Release.Date")
extract.dates <- function(x){
year(x)
month(x)
week(x)
wday(x, label = TRUE)
}
extract.dates(release.df$Release.Date)
######################################
#Collecting film meta-data - Box Office Mojo
library(XML) #Used to scrape film data
library(lubridate) #Used to format release dates
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "a24","arcent", "focus", "lionsgate", "paramount", "sony","universal", "warnerbros", "weinsteincompany", "screengems", "ifc"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
######################################
#Collecting film meta-data - Box Office Mojo
library(XML) #Used to scrape film data
library(lubridate) #Used to format release dates
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "a24","arcent", "focus", "lionsgate", "paramount", "sony","universal", "warnerbros", "weinsteincompany", "screengems", "ifc"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
release.df <- do.call("rbind", release.list)
######################################
#Collecting film meta-data - Box Office Mojo
library(XML) #Used to scrape film data
library(lubridate) #Used to format release dates
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "a24","arcent", "focus", "lionsgate", "paramount", "sony","universal", "warnerbros", "weinsteincompany", "screengems", "ifc"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
library(rattle)
rattle()
######################################
#Collecting film meta-data - Box Office Mojo
library(XML)       #Used to scrape film data
library(lubridate) #Used to format release dates
library(rattle)    #Used to produce summary statistics after data collection and cleaning
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "a24","arcent", "focus", "lionsgate", "paramount", "sony","universal", "warnerbros", "weinsteincompany", "screengems", "ifc"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
#Extracting Useful Date Info
clean.data$Release.Date.Year <- year(clean.data$Release.Date)
clean.data$Release.Date.Month <- month(clean.data$Release.Date)
clean.data$Release.Date.Week <- week(clean.data$Release.Date)
clean.data$Release.Date.Weekday <- wday(clean.data$Release.Date, label = TRUE)
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
View(release.df)
######################################
#Collecting film meta-data - Box Office Mojo
library(XML)       #Used to scrape film data
library(lubridate) #Used to format release dates
library(rattle)    #Used to produce summary statistics after data collection and cleaning
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "paramount", "sony","universal", "warnerbros"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
#Extracting Useful Date Info
clean.data$Release.Date.Year <- year(clean.data$Release.Date)
clean.data$Release.Date.Month <- month(clean.data$Release.Date)
clean.data$Release.Date.Week <- week(clean.data$Release.Date)
clean.data$Release.Date.Weekday <- wday(clean.data$Release.Date, label = TRUE)
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
#Exporting Data for Further Analysis
setwd("~/Documents/HollywoodModels/0. Data/2. Clean Data")
write.csv(release.df, "Future Film Release Dates.csv")
#Opening up Rattle to Explore Further
rattle()
rattle()
######################################
#Collecting film meta-data - Box Office Mojo
library(XML)       #Used to scrape film data
library(lubridate) #Used to format release dates
library(rattle)    #Used to produce summary statistics after data collection and cleaning
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "paramount", "sony","universal", "warnerbros"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
#Extracting Useful Date Info
clean.data$Release.Date.Year <- year(clean.data$Release.Date)
clean.data$Release.Date.Month <- month(clean.data$Release.Date)
clean.data$Release.Date.Year <- week(clean.data$Release.Date)
clean.data$Release.Date.Weekday <- wday(clean.data$Release.Date, label = TRUE)
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
#Exporting Data for Further Analysis
setwd("~/Documents/HollywoodModels/0. Data/2. Clean Data")
write.csv(release.df, "Future Film Release Dates.csv")
#Opening up Rattle to Explore Further
rattle()
######################################
#Collecting film meta-data - Box Office Mojo
library(XML)       #Used to scrape film data
library(lubridate) #Used to format release dates
library(rattle)    #Used to produce summary statistics after data collection and cleaning
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "paramount", "sony","universal", "warnerbros"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
#Extracting Useful Date Info
clean.data$Release.Date.Year <- year(clean.data$Release.Date)
clean.data$Release.Date.Month <- month(clean.data$Release.Date)
clean.data$Release.Week.Year <- week(clean.data$Release.Date)
clean.data$Release.Date.Weekday <- wday(clean.data$Release.Date, label = TRUE)
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
#Exporting Data for Further Analysis
setwd("~/Documents/HollywoodModels/0. Data/2. Clean Data")
write.csv(release.df, "Future Film Release Dates.csv")
#Opening up Rattle to Explore Further
rattle()
######################################
#Collecting film meta-data - Box Office Mojo
library(XML)       #Used to scrape film data
library(lubridate) #Used to format release dates
library(rattle)    #Used to produce summary statistics after data collection and cleaning
#Source of Data: http://www.boxofficemojo.com/schedule/?view=distributor&p=.htm
#List of distributors, you can add additional lists by clicking on the link above
dist <- as.list(c("buenavista", "fox", "paramount", "sony","universal", "warnerbros"))
#Empty container to hold data per distributor
dist.data <- list()
#Web Scraping Function
scrape.data <- function(x){
#produces a URL to pass to an XML libray function based on distributor
urls <- paste0("http://www.boxofficemojo.com/schedule/?view=distributor&id=", x ,".htm")
#Extrcting relevant table from the web
input <- readHTMLTable(urls)[[1]]
#The first few rows contain irrelevant header info, so they are deleted
input.clean <- input[-c(1,2,3,4),]
#Creates new variable to identify the distributor in the dataset
input.clean$dist <- c(x)
#Remaing the varibles in the dataframe
names(input.clean) <- c("Movie", "Release.Date", "Distributor")
#Removing non-standard or missing dates (is the standard xx/xx/xx)
clean.data <- input.clean[complete.cases(input.clean),]
clean.data <- clean.data[ which(clean.data$Release.Date != "TBD"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2016"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2017"), ]
clean.data <- clean.data[ which(clean.data$Release.Date != "2018"), ]
#Saving results in a list, so an family of apply functions can loop through a list of dist
clean.data$Release.Date <- as.Date(clean.data$Release.Date, "%m/%d/%y")
#Extracting Useful Date Info
clean.data$Release.Date.Year <- year(clean.data$Release.Date)
clean.data$Release.Date.Month <- month(clean.data$Release.Date)
clean.data$Release.Week.Year <- week(clean.data$Release.Date)
clean.data$Release.Date.Weekday <- wday(clean.data$Release.Date, label = TRUE)
dist.data[[x]] <- clean.data
#The function output is this list
dist.data
}
#Applying scraping function to distributor list using sapply fucntion
release.list <- sapply(dist, scrape.data)
#Stacking Data
release.df <- do.call("rbind", release.list)
#Exporting Data for Further Analysis
setwd("~/Documents/HollywoodModels/0. Data/2. Clean Data")
write.csv(release.df, "Future Film Release Dates.csv")
release.df
View(release.df)
View(release.df)
######################################
#Collecting film meta-data - Box Office Mojo
library(XML) #Used to parse out film data
u <- "http://www.boxofficemojo.com/movies/?id=2guns.htm"
#Contains a host of data
test.1 <- readHTMLTable(u)[[1]]
#Contains a host of data
#test.2 <- readHTMLTable(u)[[2]]#Empty
#Contains a host of data
test.3 <- readHTMLTable(u)[[3]]
#Contains a small table with key data
test.4 <- readHTMLTable(u)[[4]]
#Contains a small table with key data
test.5 <- readHTMLTable(u)[[5]]
#Contains a small table with key data
test.6 <- readHTMLTable(u)[[6]]
#Contains a large table with key data
test.7 <- readHTMLTable(u)[[7]]
#Contains a large table with key data
test.8 <- readHTMLTable(u)[[8]]
#Contains a large table with key data
test.9 <- readHTMLTable(u)[[9]]
#Contains a large table with key data
test.10 <- readHTMLTable(u)[[10]]
#Contains a large table with key data
test.11 <- readHTMLTable(u)[[11]]
#Contains a large table with key data
#test.12 <- readHTMLTable(u)[[12]]#Empty
#Contains a large table with key data
#test.13 <- readHTMLTable(u)[[13]]#Empty
#Contains a large table with key data
#test.14 <- readHTMLTable(u)[[14]]#Empty
#Table that contains the talent in the film
test.15 <- readHTMLTable(u)[[15]]
#Ranking of the film
test.16 <- readHTMLTable(u)[[16]]
#Further ranking of film
test.17 <- readHTMLTable(u)[[17]]
#Further ranking of film
test.18 <- readHTMLTable(u)[[18]]
View(test.1)
View(test.10)
View(test.11)
View(test.15)
View(test.16)
View(test.17)
View(test.18)
View(test.3)
View(test.4)
View(test.5)
View(test.7)
View(test.8)
library(XML)
urls <- "http://www.billboard.com/articles/list/5923200/hot-rap-songs-chart-25th-anniversary-top-100-songs"
input <- readHTMLTable(urls)
urls <- "http://www.azlyrics.com/lyrics/kanyewest/allofthelights.html"
input <- readHTMLTable(urls)
input
urls <- "http://www.azlyrics.com/lyrics/kanyewest/allofthelights.html"
input <- readHTMLTable(urls)
library(XML)
urls <- "http://www.azlyrics.com/lyrics/kanyewest/allofthelights.html"
input <- readHTMLTable(urls)
